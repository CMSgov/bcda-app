name: Admin ACO Deny deploy

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment you want to deploy to (dev, test, opensbx, prod)'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - test
          - opensbx
          - prod
  push:
    branches:
      - main
    paths:
      - bcda/lambda/admin_aco_deny/**
      - .github/workflows/admin-aco-deny-deploy-GF.yml
  pull_request:

env:
  environment: dev # default is always dev

jobs:
  build_and_zip:
    #if: ${{ github.event_name == 'merge' }} || ${{ inputs.env == "dev" }} || || ${{ inputs.env == "test" }}
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-bcda-app-${{github.run_id}}-${{github.run_attempt}}
    defaults:
      run:
        working-directory: bcda
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'
      - name: Build admin-aco-deny zip file
        env:
          CGO_ENABLED: 0
        run: |
          go build -o bin/bootstrap ./lambda/admin_aco_deny/*.go
          zip -j function.zip bin/bootstrap
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.NON_PROD_ACCOUNT_ID }}:role/delegatedadmin/developer/bcda-dev-github-actions # update this for prod later
      # - name: Verify Environment
      #   run: |
      #     if [[ ${{ inputs.env != '' }} ]]; then
      #       echo "ENVIRONMENT=${{ inputs.env }}" >> $GITHUB_ENV
      #     fi
      #     echo $ENVIRONMENT
      - name: Get Bucket
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
        with:
          params: | # update this to correspond to the correct environment
            BUCKET=/bcda/bcda-${{ env.ENVIRONMENT }}-admin-aco-deny-zip-bucket 
      - name: Upload and reload
        run: |
          echo $ENVIRONMENT
          aws s3 cp --no-progress function.zip \
            s3://$BUCKET/function-${{ github.sha }}.zip 
          aws lambda update-function-code --function-name bcda-$ENVIRONMENT-admin-aco-deny \
            --s3-bucket $BUCKET --s3-key function-${{ github.sha }}.zip 
