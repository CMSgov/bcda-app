name: Quality Checks

on:
  # TODO: on pull request, open, close, push?
  workflow_call:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  quality_checks:
    name: Quality Checks
    runs-on: self-hosted
    # timeout-minutes: 120 # this mimics the 2 hour SonarQube Quality Gate
    steps:
      # - name: Clear working dir
      - name: Checkout BCDA
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-app
          ref: ${{ inputs.release_version }}
      # - name: Checkout BCDA-OPS
      - name: Decrypt secrets
        env:
          VAULT_PW: ${{ secrets.VAULT_PW }}
        run: |
          echo $VAULT_PW > .vault_password
          bash ops/secrets --decrypt
          mv -fv shared_files/encrypted/* shared_files/decrypted/
      - name: Linting
        run: make lint LINT_TIMEOUT=4.5m
      - name: Unit Tests
        run: make unit-test
      - name: Set SonarQube ENV vars from AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            SONAR_HOST_URL=/sonarqube/url
            SONAR_TOKEN=/sonarqube/token
      - name: SonarQube Analysis
        uses: SonarSource/sonarqube-scan-action@master # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        with:
          args: |
            -Dsonar.projectKey=bcda-aco-api
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=./test_results/latest/testcoverage.out
            -Dsonar.coverage.exclusions=**/*test.go,**/test/**/*,**/testUtils/*,**/scripts/*,**/ops/*,**/mock*.go,**/mock/**/*
            -Dsonar.branch.name=${{ inputs.release_version }}
            -Dsonar.projectVersion=${{ github.sha }}
            -Dsonar.qualitygate.wait=true