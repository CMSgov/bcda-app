name: Build and publish BCDA/Worker

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  ci_checks:
    uses: ./.github/workflows/ci-checks.yml
    with:
      release_version: ${{ inputs.release_version || 'main' }}
    secrets: inherit

  build_and_publish:
    needs: [ci_checks]
    runs-on: codebuild-bcda-app-${{github.run_id}}-${{github.run_attempt}}
    # environment: ${{ inputs.env || 'dev' }}
    strategy:
      matrix:
        vars:
          - account_id: NON_PROD_ACCOUNT_ID
            # role_to_assume: bcda-dev-github-actions
          - account_id: PROD_ACCOUNT_ID
            # role_to_assume: bcda-prod-github-actions
    steps:
      - name: Checkout BCDA
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-app
          ref: ${{ inputs.release_version }}
      - name: Set ECR_URL
        run: echo "ECR_URL=${{ secrets[matrix.vars.account_id] }}.dkr.ecr.us-east-1.amazonaws.com/bcda-api" >> $GITHUB_ENV
      - name: Build BCDA
        run: docker build \
          --build-arg RELEASE_VERSION=${{ inputs.release_version || 'main' }} \
          -t ${{ env.ECR_URL }}:latest \
          -t ${{ env.ECR_URL }}:${{ inputs.release_version || 'main' }} \
          -f Dockerfiles/Dockerfile.bcda .
      - name: Build BCDA Worker
        run: docker build \
          --build-arg RELEASE_VERSION=${{ inputs.release_version || 'main' }} \
          -t ${{ env.ECR_URL }}:latest \
          -t ${{ env.ECR_URL }}:${{ inputs.release_version || 'main' }} \
          -f Dockerfiles/Dockerfile.bcdaworker .
      - name: Push to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin '${{ env.ECR_URL }}'
          docker image push -a '${{ env.ECR_URL }}'
