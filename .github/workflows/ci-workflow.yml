name: BCDA CI Workflow

on: [push]

env:
  COMPOSE_INTERACTIVE_NO_CLI: 1
  VAULT_PW: ${{ secrets.VAULT_PW }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Go paths
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build-cache::$(go env GOCACHE)"
          echo "::set-output name=go-mod-cache::$(go env GOMODCACHE)" 
      - name: Create Go paths for caches
        run: |
          mkdir -p ${{ steps.go-cache-paths.outputs.go-build-cache }}
          mkdir -p ${{ steps.go-cache-paths.outputs.go-mod-cache }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Decrypt secrets
        run: |
          echo $VAULT_PW > .vault_password
          bash ops/secrets --decrypt
          mv -fv shared_files/encrypted/* shared_files/decrypted/
      - name: Retrieve Go build cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build-cache }}
          key: ${{ runner.os }}-go-build-test6-${{ hashFiles('**/go.sum') }}
      - name: Retrieve Go mod cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod-cache }}
          key: ${{ runner.os }}-go-mod-test6-${{ hashFiles('**/go.sum') }}
      - name: Find files before download
        run: |
          tree -daL 3 ${{ steps.go-cache-paths.outputs.go-mod-cache }}
      - name: Download dependencies
        run: |
          go mod download
      - name: Find files after download
        run: |
          tree -daL 3 ${{ steps.go-cache-paths.outputs.go-mod-cache }}
      - name: Build the stack
        run: |
          make docker-bootstrap
      - name: Run all tests
        run: |
          #make test

