name: FHIR Scan

on:
  pull_request:
    paths:
      - .github/workflows/fhirscan.yml
  workflow_dispatch:

jobs:
  fhirscan:
    name: run fhir scan
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/bcda-test-github-actions
      - name: Get client credentials
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            CLIENT_CREDENTIALS_PARAMS=/bcda/test/small_client_credentials
      - name: Run Inferno
        id: run
        run: |
          echo "Running FHIR inferno against https://test.bcda.cms.gov"
          echo ${GITHUB_WORKSPACE}
          echo ${{ github.workspace }}
          cd ${GITHUB_WORKSPACE} 
          pwd
          ls 
          
          docker build -t inferno:1 https://github.com/inferno-framework/bulk-data-test-kit.git
          docker compose -f fhir_testing/docker-compose.inferno.yml run inferno bundle exec inferno migrate
          docker compose -f fhir_testing/docker-compose.inferno.yml up -d
          sleep 20
          docker stop fhir_testing-hl7_validator_service-1

          docker network ls

          CLIENT_ID=$(echo $CLIENT_CREDENTIALS_PARAMS | jq -r .client_id)
          CLIENT_SECRET=$(echo $CLIENT_CREDENTIALS_PARAMS | jq -r .client_secret)

          docker build --no-cache -t fhir_testing -f Dockerfiles/Dockerfile.fhir_testing .
          docker run --add-host=host.docker.internal:host-gateway --rm -e BULK_URL="https://test.bcda.cms.gov/api/v2/" -e CLIENT_ID="$CLIENT_ID" -e CLIENT_SECRET="$CLIENT_SECRET" -e TOKEN_URL="https://test.bcda.cms.gov/auth/token" fhir_testing

          RESULT=$(docker logs fhir_testing --tail 6 | grep -o " - Tests Failed: [0-9]*" | cut -d ' ' -f3)
          echo $RESULT

          if [[ $RESULT -eq 0 ]]; then
            exit 0
          else
            exit 1
          fi


