name: Package BCDA, Worker RPMs

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  package_bcda_rpms:
    name: Package BCDA, Worker RPMs
    runs-on: self-hosted
    steps:
      - name: Checkout BCDA
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-app
          ref: ${{ inputs.release_version }}
      - name: Set up Ansible
        run: |
          sudo dnf -y install python3 python3-pip
          pip install ansible
      - name: Decrypt secrets
        env:
          VAULT_PW: ${{ secrets.VAULT_PW }}
        run: |
          echo "$VAULT_PW" > .vault_password
          bash ops/secrets --decrypt
          mv -fv shared_files/encrypted/* shared_files/decrypted/
      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            BCDA_GPG_PUB_KEY=/bcda/gpg/pub-key
            BCDA_GPG_SEC_KEY=/bcda/gpg/sec-key
            BCDA_GPG_RPM_PASSPHRASE=/bcda/gpg/passphrase
      - name: Build and package RPMs
        env: 
          GPG_RPM_USER: Beneficiary Claims Data API
          GPG_RPM_EMAIL: "bcapi@cms.hhs.gov"
          GPG_PUB_KEY_FILE: "../ops/RPM-GPG-KEY-bcda"
          GPG_SEC_KEY_FILE: "../ops/RPM-GPG-KEY-SECRET-bcda"
        run: |
          echo ${{ env.BCDA_GPG_PUB_KEY }} > ops/${{ env.GPG_PUB_KEY_FILE }}
          echo ${{ env.BCDA_GPG_SEC_KEY }} > ops/${{ env.GPG_SEC_KEY_FILE }}
          # Remove any slashes - we don't want RPM to contain slash
          BCDA_GPG_RPM_PASSPHRASE=${{ env.BCDA_GPG_RPM_PASSPHRASE }} GPG_RPM_USER="${{ env.GPG_RPM_USER }}" GPG_RPM_EMAIL=${{ env.GPG_RPM_EMAIL }} GPG_PUB_KEY_FILE=${{ env.GPG_PUB_KEY_FILE }} GPG_SEC_KEY_FILE=${{ env.GPG_SEC_KEY_FILE }} make package version=`echo ${{ inputs.release_version }} | sed 's/.*\///'`
      - name: Upload BCDA RPM to s3 releases
        # TODO: should we be checking blank release_version or should we be checking inputs.release_env == 'dev' ?
        if: ${{ inputs.release_version != '' }}
        working-directory: ./bcda-app/bcda
        run: |
          export BCDA_RPM=`ls bcda-*.rpm | tr '\n' ' '`
          echo $BCDA_RPM
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-releases/bcda-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-release-latest.rpm
      - name: Upload BCDA Worker RPM to s3 releases
        if: ${{ inputs.release_version != '' }}
        working-directory: ./bcda-app/bcdaworker
        run: |
          export BCDA_WORKER_RPM=`ls bcdaworker-*.rpm | tr '\n' ' '`
          echo $BCDA_WORKER_RPM
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcda-releases/bcdaworker-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcdaworker-release-latest.rpm
      - name: Upload BCDA RPM to s3 dev
        if: ${{ inputs.release_version == '' }}
        working-directory: ./bcda-app/bcda
        run: |
          export BCDA_RPM=`ls bcda-*.rpm | tr '\n' ' '`
          echo $BCDA_RPM
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-releases/bcda-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-release-latest.rpm
      - name: Upload BCDA Worker RPM to s3 dev
        if: ${{ inputs.release_version == '' }}
        working-directory: ./bcda-app/bcdaworker
        run: |
          export BCDA_WORKER_RPM=`ls bcdaworker-*.rpm | tr '\n' ' '`
          echo $BCDA_WORKER_RPM
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcda-releases/bcdaworker-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcdaworker-release-latest.rpm
      - name: Cleanup secrets
        if: ${{ always() }}
        run: rm -r shared_files/decrypted shared_files/encrypted .vault_password