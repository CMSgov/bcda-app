name: Package BCDA, Worker RPMs

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Release version/tag (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version/tag (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  package_bcda_rpms:
    environment: ${{ inputs.env || 'dev' }}
    name: Package BCDA, Worker RPMs
    runs-on: codebuild-bcda-app-${{github.run_id}}-${{github.run_attempt}}
    strategy:
      matrix:
        vars:
          - account_id: NON_PROD_ACCOUNT_ID
            role_to_assume: bcda-dev-github-actions
          - account_id: PROD_ACCOUNT_ID
            role_to_assume: bcda-prod-github-actions
    steps:
      - name: Checkout BCDA
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-app
          ref: ${{ inputs.release_version }}
      - name: Install Ansible
        run: |
          sudo yum update -y
          sudo yum install python3-pip -y
          sudo dnf install ansible-8.3.0 -y      
      - name: Decrypt secrets
        env:
          VAULT_PW: ${{ secrets.VAULT_PW }}
        run: |
          echo "$VAULT_PW" > .vault_password
          bash ops/secrets --decrypt
          mv -fv shared_files/encrypted/* shared_files/decrypted/
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets[matrix.vars.account_id] }}:role/delegatedadmin/developer/${{ matrix.vars.role_to_assume }}
      - name: Get AWS params
        uses: cmsgov/cdap/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            BCDA_GPG_PUB_KEY=/bcda/gpg/pub-key
            BCDA_GPG_SEC_KEY=/bcda/gpg/sec-key
            BCDA_GPG_RPM_PASSPHRASE=/bcda/gpg/passphrase
            BCDA_RPMS_BUCKET=/bcda/rpms_bucket
      - name: Build and package RPMs
        env: 
          GPG_RPM_USER: "Beneficiary Claims Data API (for signing RPMs)"
          GPG_RPM_EMAIL: "bcapi@cms.hhs.gov"
          GPG_PUB_KEY_FILE: "../ops/RPM-GPG-KEY-bcda"
          GPG_SEC_KEY_FILE: "../ops/RPM-GPG-KEY-SECRET-bcda"
        run: |
          echo "${{ env.BCDA_GPG_PUB_KEY }}" > ops/${{ env.GPG_PUB_KEY_FILE }}
          echo "${{ env.BCDA_GPG_SEC_KEY }}" > ops/${{ env.GPG_SEC_KEY_FILE }}
          # Remove any slashes - we don't want RPM to contain slash
          BCDA_GPG_RPM_PASSPHRASE=${{ env.BCDA_GPG_RPM_PASSPHRASE }} GPG_RPM_USER="${{ env.GPG_RPM_USER }}" GPG_RPM_EMAIL=${{ env.GPG_RPM_EMAIL }} GPG_PUB_KEY_FILE=${{ env.GPG_PUB_KEY_FILE }} GPG_SEC_KEY_FILE=${{ env.GPG_SEC_KEY_FILE }} make package version=`echo ${{ inputs.release_version }} | sed 's/.*\///'`
      
      - name: Upload BCDA RPM to s3 prod
        if: ${{ inputs.release_version != '' && inputs.release_version != 'main' }}
        working-directory: ./bcda
        run: |
          export BCDA_RPM=`ls bcda-*.rpm | tr '\n' ' '`
          aws s3 cp --only-show-errors $BCDA_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-releases/bcda-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-release-latest.rpm

      - name: Upload BCDA Worker RPM to s3 prod
        if: ${{ inputs.release_version != '' && inputs.release_version != 'main' }}
        working-directory: ./bcdaworker
        run: |
          export BCDA_WORKER_RPM=`ls bcdaworker-*.rpm | tr '\n' ' '`
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-releases/bcdaworker-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcdaworker-release-latest.rpm
      
      - name: Upload BCDA RPM to s3 dev
        if: ${{ inputs.release_version == '' || inputs.release_version == 'main' }}
        working-directory: ./bcda
        run: |
          export BCDA_RPM=`ls bcda-*.rpm | tr '\n' ' '`
          export NEW_BCDA_RPM_NAME=`echo $BCDA_RPM | sed -e 's/-1.x86_64.rpm/-'build'${{ github.run_id }}''.rpm/g'`
          aws s3 cp --only-show-errors $BCDA_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-dev/${NEW_BCDA_RPM_NAME}
          aws s3 cp --only-show-errors $BCDA_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-dev-latest.rpm
      
      - name: Upload BCDA Worker RPM to s3 dev
        if: ${{ inputs.release_version == '' || inputs.release_version == 'main' }}
        working-directory: ./bcdaworker
        run: |
          export BCDA_WORKER_RPM=`ls bcdaworker-*.rpm | tr '\n' ' '`
          export NEW_BCDA_WORKER_RPM_NAME=`echo $BCDA_WORKER_RPM | sed -e 's/-1.x86_64.rpm/-'build'${{ github.run_id }}''.rpm/g'`
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcda-dev/${NEW_BCDA_WORKER_RPM_NAME}
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://${{ env.BCDA_RPMS_BUCKET }}/bcdaworker-dev-latest.rpm
      - name: Cleanup secrets
        if: ${{ always() }}
        run: rm -rf shared_files/decrypted shared_files/encrypted .vault_password
