name: Package BCDA, Worker RPMs

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  package_bcda_rpms:
    name: Package BCDA, Worker RPMs
    runs-on: self-hosted
    steps:
      # - name: Clear working dir
    #   - name: Checkout BCDA
    #     uses: actions/checkout@v4
    #     with:
    #       repository: CMSgov/bcda-app
    #       ref: ${{ inputs.release_version }}
      # - name: Checkout BCDA-OPS
      # - name: Decrypt secrets
      #   env:
      #     VAULT_PW: ${{ secrets.VAULT_PW }}
      #   run: |
      #     echo $VAULT_PW > .vault_password
      #     bash ops/secrets --decrypt
      #     mv -fv shared_files/encrypted/* shared_files/decrypted/
      - name: Build and package RPMs
        run: |
          cp $BCDA_GPG_PUB_KEY ops/$GPG_PUB_KEY_FILE
          cp $BCDA_GPG_SEC_KEY ops/$GPG_SEC_KEY_FILE
          # Remove any slashes - we don't want RPM to contain slash
          BCDA_GPG_RPM_PASSPHRASE=$BCDA_GPG_RPM_PASSPHRASE GPG_RPM_USER="$GPG_RPM_USER" GPG_RPM_EMAIL=$GPG_RPM_EMAIL GPG_PUB_KEY_FILE=$GPG_PUB_KEY_FILE GPG_SEC_KEY_FILE=$GPG_SEC_KEY_FILE make package version=`echo ${{ inputs.release_version }} | sed 's/.*\\///'`
      # - name: SonarQube Quality Gate
        # continue-on-error: true
      - name: Upload BCDA RPM to s3 releases
        # TODO: should we be checking blank release_version or should we be checking inputs.release_env == 'dev' ?
        if: ${{ inputs.release_version != '' }}
        working-directory: ./bcda-app/bcda
        run: |
          BCDA_RPM = ls bcda-*.rpm | tr '\n' ' '
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-releases/bcda-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-release-latest.rpm
      - name: Upload BCDA Worker RPM to s3 releases
        if: ${{ inputs.release_version != '' }}
        working-directory: ./bcda-app/bcdaworker
        run: |
          BCDA_WORKER_RPM = ls bcdaworker-*.rpm | tr '\n' ' '
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcda-releases/bcdaworker-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcdaworker-release-latest.rpm
      - name: Upload BCDA RPM to s3 dev
        if: ${{ inputs.release_version == '' }}
        working-directory: ./bcda-app/bcda
        run: |
          BCDA_RPM = ls bcda-*.rpm | tr '\n' ' '
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-releases/bcda-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_RPM s3://bcda-rpms/bcda-release-latest.rpm
      - name: Upload BCDA Worker RPM to s3 dev
        if: ${{ inputs.release_version == '' }}
        working-directory: ./bcda-app/bcdaworker
        run: |
          BCDA_WORKER_RPM = ls bcdaworker-*.rpm | tr '\n' ' '
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcda-releases/bcdaworker-release-${{ inputs.release_version }}.rpm
          aws s3 cp --only-show-errors $BCDA_WORKER_RPM s3://bcda-rpms/bcdaworker-release-latest.rpm