# Tag a new release version, tag it on github, then create a release
name: Build AMI

on:
  # workflow_call:
  #   inputs:
  #     release_version:
  #       description: 'Release version (tag or branch name)'
  #       required: true
  #       type: string
  #     ops_release_version:
  #       description: 'Release version for bcda-ops (or branch name)'
  #       required: true
  #       type: string
  #     previous_release_version:
  #       description: 'Previous version (tag or branch name)'
  #       required: true
  #       type: string
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
      ops_release_version:
        description: 'Release version for bcda-ops (or branch name)'
        required: true
        type: string
      previous_release_version:
        description: 'Previous version (tag or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  GITHUB_USER: carlpartridge
  GITHUB_EMAIL: "carlpartridge@navapbc.com"
  GPG_KEY_FILE_NAME: "bcda_ci_github_gpg.key"

jobs:
  tag_and_release:
    name: Tag and Release
    runs-on: self-hosted
    steps:
      - name: Checkout BCDA
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-app 
          ref: ${{ inputs.release_version }}
      - name: Set tags env var
        if: ${{ inputs.release_version != '' && inputs.previous_release_version != '' }}
        run: |
          export TAG_ARGS_APP="'tag_args=-t ${{ inputs.previous_release_version }} ${{ inputs.release_version }}'"
          echo $TAG_ARGS_APP
          echo "TAG_ARGS_APP=$TAG_ARGS_APP" >> $GITHUB_ENV
          export TAG_ARGS_OPS="'-t ${{ inputs.previous_release_version }} ${{ inputs.release_version }}'"
          echo $TAG_ARGS_OPS
          echo "TAG_ARGS_OPS=$TAG_ARGS_OPS" >> $GITHUB_ENV
      - name: Catch incorrect inputs
        if: ${{ inputs.release_version != '' || inputs.previous_release_version != '' }}
        run: |
          echo 'FAILURE: To initiate manual tagging, both release_version and previous_release_version must be specified.'
          exit 1
      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            BCDA_GPG_PUB_KEY=/bcda/gpg/pub-key
      - name: Run release script
        run: |
          cp ${{ env.BCDA_GPG_PUB_KEY }} ./${{ env.GPG_KEY_FILE_NAME }}
          GITHUB_REPO_PATH='/CMSgov/bcda-app' GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }} GITHUB_USER='${{ env.GITHUB_USER }}' GITHUB_EMAIL='${{ env.GITHUB_EMAIL }}' GITHUB_GPG_KEY_FILE=${{ env.GPG_KEY_FILE_NAME }} bash release.sh ${{ env.TAG_ARGS_APP }}
      # - name: Set release tag
      #   run: |
      #     export RELEASE_TAG=`git describe --abbrev=0 --tags | tr '\n' ' '`
      #     echo $RELEASE_TAG
      #     echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
      - name: Upload release scripts
        uses: actions/upload-artifact@v4
        with:
          name: release-scripts
          path: |
            ./ops/release.sh
            ./ops/github_release.py
      - name: Checkout BCDA-OPS
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-ops
          ref: ${{ inputs.ops_release_version }}
      - name: Download release scripts
        uses: actions/download-artifact@v4
        with:
          name: release-scripts
      - name: Run release for Ops
        run: |
          cp "${{ env.BCDA_GPG_PUB_KEY }}" ./${{ env.GPG_KEY_FILE_NAME }}
          GITHUB_REPO_PATH='/CMSgov/bcda-ops' GITHUB_ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} GITHUB_USER='${{ env.GITHUB_USER }}' GITHUB_EMAIL='${{ env.GITHUB_EMAIL }}' GITHUB_GPG_KEY_FILE=${{ env.GPG_KEY_FILE_NAME }} bash release.sh ${{ env.TAG_ARGS_OPS }}
      - name: Success Alert
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          # Sends to bcda-deploy
          payload: |
            channel: "C03S23MJFJS"
            attachments:
              - color: good
                text: "SUCCESS: Tag and Release BCDA (${{ inputs.release_version }})and OPS (${{ inputs.ops_release_version }}) (run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }})>"
                mrkdown_in:
                  - text
      - name: Failure Alert
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          # Sends to bcda-alerts
          payload: |
            channel: "C034CFU945C"
            attachments:
              - color: danger
                text: "FAILED: Tag and Release BCDA (${{ inputs.release_version }})and OPS (${{ inputs.ops_release_version }}) (run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }})>"
                mrkdown_in:
                  - text


