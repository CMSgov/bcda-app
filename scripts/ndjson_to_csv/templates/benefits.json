{
    "resourceType" : "ExplanationOfBenefit",
    // from Resource: id, meta, implicitRules, and language
    // from DomainResource: text, contained, extension, and modifierExtension
    "identifier" : [{ Identifier }], // Business Identifier for the resource
    "status" : "<code>", // R!  active | cancelled | draft | entered-in-error
    "type" : { CodeableConcept }, // R!  Category or discipline
    "subType" : { CodeableConcept }, // More granular claim type
    "use" : "<code>", // R!  claim | preauthorization | predetermination
    "patient" : { Reference(Patient) }, // R!  The recipient of the products and services
    "billablePeriod" : { Period }, // Relevant time frame for the claim
    "created" : "<dateTime>", // R!  Response creation date
    "enterer" : { Reference(Practitioner|PractitionerRole) }, // Author of the claim
    "insurer" : { Reference(Organization) }, // R!  Party responsible for reimbursement
    "provider" : { Reference(Practitioner|PractitionerRole|Organization) }, // R!  Party responsible for the claim
    "priority" : { CodeableConcept }, // Desired processing urgency 
    "fundsReserveRequested" : { CodeableConcept }, // For whom to reserve funds
    "fundsReserve" : { CodeableConcept }, // Funds reserved status
    "related" : [{ // Prior or corollary claims
      "claim" : { Reference(Claim) }, // Reference to the related claim
      "relationship" : { CodeableConcept }, // How the reference claim is related
      "reference" : { Identifier } // File or case reference
    }],
    "prescription" : { Reference(MedicationRequest|VisionPrescription) }, // Prescription authorizing services or products
    "originalPrescription" : { Reference(MedicationRequest) }, // Original prescription if superceded by fulfiller
    "payee" : { // Recipient of benefits payable
      "type" : { CodeableConcept }, // Category of recipient
      "party" : { Reference(Practitioner|PractitionerRole|Organization|Patient|
      RelatedPerson) } // Recipient reference
    },
    "referral" : { Reference(ServiceRequest) }, // Treatment Referral
    "facility" : { Reference(Location) }, // Servicing Facility
    "claim" : { Reference(Claim) }, // Claim reference
    "claimResponse" : { Reference(ClaimResponse) }, // Claim response reference
    "outcome" : "<code>", // R!  queued | complete | error | partial
    "disposition" : "<string>", // Disposition Message
    "preAuthRef" : ["<string>"], // Preauthorization reference
    "preAuthRefPeriod" : [{ Period }], // Preauthorization in-effect period
    "careTeam" : [{ // Care Team members
      "sequence" : "<positiveInt>", // R!  Order of care team
      "provider" : { Reference(Practitioner|PractitionerRole|Organization) }, // R!  Practitioner or organization
      "responsible" : <boolean>, // Indicator of the lead practitioner
      "role" : { CodeableConcept }, // Function within the team
      "qualification" : { CodeableConcept } // Practitioner credential or specialization
    }],
    "supportingInfo" : [{ // Supporting information
      "sequence" : "<positiveInt>", // R!  Information instance identifier
      "category" : { CodeableConcept }, // R!  Classification of the supplied information
      "code" : { CodeableConcept }, // Type of information
      // timing[x]: When it occurred. One of these 2:
      "timingDate" : "<date>",
      "timingPeriod" : { Period },
      // value[x]: Data to be provided. One of these 5:
      "valueBoolean" : <boolean>,
      "valueString" : "<string>",
      "valueQuantity" : { Quantity },
      "valueAttachment" : { Attachment },
      "valueReference" : { Reference(Any) },
      "reason" : { Coding } // Explanation for the information
    }],
    "diagnosis" : [{ // Pertinent diagnosis information
      "sequence" : "<positiveInt>", // R!  Diagnosis instance identifier
      // diagnosis[x]: Nature of illness or problem. One of these 2:
      "diagnosisCodeableConcept" : { CodeableConcept },
      "diagnosisReference" : { Reference(Condition) },
      "type" : [{ CodeableConcept }], // Timing or nature of the diagnosis
      "onAdmission" : { CodeableConcept }, // Present on admission
      "packageCode" : { CodeableConcept } // Package billing code
    }],
    "procedure" : [{ // Clinical procedures performed
      "sequence" : "<positiveInt>", // R!  Procedure instance identifier
      "type" : [{ CodeableConcept }], // Category of Procedure
      "date" : "<dateTime>", // When the procedure was performed
      // procedure[x]: Specific clinical procedure. One of these 2:
      "procedureCodeableConcept" : { CodeableConcept },
      "procedureReference" : { Reference(Procedure) },
      "udi" : [{ Reference(Device) }] // Unique device identifier
    }],
    "precedence" : "<positiveInt>", // Precedence (primary, secondary, etc.)
    "insurance" : [{ // R!  Patient insurance information
      "focal" : <boolean>, // R!  Coverage to be used for adjudication
      "coverage" : { Reference(Coverage) }, // R!  Insurance information
      "preAuthRef" : ["<string>"] // Prior authorization reference number
    }],
    "accident" : { // Details of the event
      "date" : "<date>", // When the incident occurred
      "type" : { CodeableConcept }, // The nature of the accident
      // location[x]: Where the event occurred. One of these 2:
      "locationAddress" : { Address }
      "locationReference" : { Reference(Location) }
    },
    "item" : [{ // Product or service provided
      "sequence" : "<positiveInt>", // R!  Item instance identifier
      "careTeamSequence" : ["<positiveInt>"], // Applicable care team members
      "diagnosisSequence" : ["<positiveInt>"], // Applicable diagnoses
      "procedureSequence" : ["<positiveInt>"], // Applicable procedures
      "informationSequence" : ["<positiveInt>"], // Applicable exception and supporting information
      "revenue" : { CodeableConcept }, // Revenue or cost center code
      "category" : { CodeableConcept }, // Benefit classification
      "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
      "modifier" : [{ CodeableConcept }], // Product or service billing modifiers
      "programCode" : [{ CodeableConcept }], // Program the product or service is provided under
      // serviced[x]: Date or dates of service or product delivery. One of these 2:
      "servicedDate" : "<date>",
      "servicedPeriod" : { Period },
      // location[x]: Place of service or where product was supplied. One of these 3:
      "locationCodeableConcept" : { CodeableConcept },
      "locationAddress" : { Address },
      "locationReference" : { Reference(Location) },
      "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
      "unitPrice" : { Money }, // Fee, charge or cost per item
      "factor" : <decimal>, // Price scaling factor
      "net" : { Money }, // Total item cost
      "udi" : [{ Reference(Device) }], // Unique device identifier
      "bodySite" : { CodeableConcept }, // Anatomical location
      "subSite" : [{ CodeableConcept }], // Anatomical sub-location
      "encounter" : [{ Reference(Encounter) }], // Encounters related to this billed item
      "noteNumber" : ["<positiveInt>"], // Applicable note numbers
      "adjudication" : [{ // Adjudication details
        "category" : { CodeableConcept }, // R!  Type of adjudication information
        "reason" : { CodeableConcept }, // Explanation of adjudication outcome
        "amount" : { Money }, // Monetary amount
        "value" : <decimal> // Non-monitary value
      }],
      "detail" : [{ // Additional items
        "sequence" : "<positiveInt>", // R!  Product or service provided
        "revenue" : { CodeableConcept }, // Revenue or cost center code
        "category" : { CodeableConcept }, // Benefit classification
        "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
        "modifier" : [{ CodeableConcept }], // Service/Product billing modifiers
        "programCode" : [{ CodeableConcept }], // Program the product or service is provided under
        "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
        "unitPrice" : { Money }, // Fee, charge or cost per item
        "factor" : <decimal>, // Price scaling factor
        "net" : { Money }, // Total item cost
        "udi" : [{ Reference(Device) }], // Unique device identifier
        "noteNumber" : ["<positiveInt>"], // Applicable note numbers
        "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }], // Detail level adjudication details
        "subDetail" : [{ // Additional items
          "sequence" : "<positiveInt>", // R!  Product or service provided
          "revenue" : { CodeableConcept }, // Revenue or cost center code
          "category" : { CodeableConcept }, // Benefit classification
          "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
          "modifier" : [{ CodeableConcept }], // Service/Product billing modifiers
          "programCode" : [{ CodeableConcept }], // Program the product or service is provided under
          "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
          "unitPrice" : { Money }, // Fee, charge or cost per item
          "factor" : <decimal>, // Price scaling factor
          "net" : { Money }, // Total item cost
          "udi" : [{ Reference(Device) }], // Unique device identifier
          "noteNumber" : ["<positiveInt>"], // Applicable note numbers
          "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }] // Subdetail level adjudication details
        }]
      }]
    }],
    "addItem" : [{ // Insurer added line items
      "itemSequence" : ["<positiveInt>"], // Item sequence number
      "detailSequence" : ["<positiveInt>"], // Detail sequence number
      "subDetailSequence" : ["<positiveInt>"], // Subdetail sequence number
      "provider" : [{ Reference(Practitioner|PractitionerRole|Organization) }], // Authorized providers
      "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
      "modifier" : [{ CodeableConcept }], // Service/Product billing modifiers
      "programCode" : [{ CodeableConcept }], // Program the product or service is provided under
      // serviced[x]: Date or dates of service or product delivery. One of these 2:
      "servicedDate" : "<date>",
      "servicedPeriod" : { Period },
      // location[x]: Place of service or where product was supplied. One of these 3:
      "locationCodeableConcept" : { CodeableConcept },
      "locationAddress" : { Address },
      "locationReference" : { Reference(Location) },
      "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
      "unitPrice" : { Money }, // Fee, charge or cost per item
      "factor" : <decimal>, // Price scaling factor
      "net" : { Money }, // Total item cost
      "bodySite" : { CodeableConcept }, // Anatomical location
      "subSite" : [{ CodeableConcept }], // Anatomical sub-location
      "noteNumber" : ["<positiveInt>"], // Applicable note numbers
      "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }], // Added items adjudication
      "detail" : [{ // Insurer added line items
        "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
        "modifier" : [{ CodeableConcept }], // Service/Product billing modifiers
        "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
        "unitPrice" : { Money }, // Fee, charge or cost per item
        "factor" : <decimal>, // Price scaling factor
        "net" : { Money }, // Total item cost
        "noteNumber" : ["<positiveInt>"], // Applicable note numbers
        "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }], // Added items adjudication
        "subDetail" : [{ // Insurer added line items
          "productOrService" : { CodeableConcept }, // R!  Billing, service, product, or drug code
          "modifier" : [{ CodeableConcept }], // Service/Product billing modifiers
          "quantity" : { Quantity(SimpleQuantity) }, // Count of products or services
          "unitPrice" : { Money }, // Fee, charge or cost per item
          "factor" : <decimal>, // Price scaling factor
          "net" : { Money }, // Total item cost
          "noteNumber" : ["<positiveInt>"], // Applicable note numbers
          "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }] // Added items adjudication
        }]
      }]
    }],
    "adjudication" : [{ Content as for ExplanationOfBenefit.item.adjudication }], // Header-level adjudication
    "total" : [{ // Adjudication totals
      "category" : { CodeableConcept }, // R!  Type of adjudication information
      "amount" : { Money } // R!  Financial total for the category
    }],
    "payment" : { // Payment Details
      "type" : { CodeableConcept }, // Partial or complete payment
      "adjustment" : { Money }, // Payment adjustment for non-claim issues
      "adjustmentReason" : { CodeableConcept }, // Explanation for the variance
      "date" : "<date>", // Expected date of payment
      "amount" : { Money }, // Payable amount after adjustment
      "identifier" : { Identifier } // Business identifier for the payment
    },
    "formCode" : { CodeableConcept }, // Printed form identifier
    "form" : { Attachment }, // Printed reference or actual form
    "processNote" : [{ // Note concerning adjudication
      "number" : "<positiveInt>", // Note instance identifier
      "type" : "<code>", // display | print | printoper
      "text" : "<string>", // Note explanatory text
      "language" : { CodeableConcept } // Language of the text
    }],
    "benefitPeriod" : { Period }, // When the benefits are applicable
    "benefitBalance" : [{ // Balance by Benefit Category
      "category" : { CodeableConcept }, // R!  Benefit classification
      "excluded" : <boolean>, // Excluded from the plan
      "name" : "<string>", // Short name for the benefit
      "description" : "<string>", // Description of the benefit or services covered
      "network" : { CodeableConcept }, // In or out of network
      "unit" : { CodeableConcept }, // Individual or family
      "term" : { CodeableConcept }, // Annual or lifetime
      "financial" : [{ // Benefit Summary
        "type" : { CodeableConcept }, // R!  Benefit classification
        // allowed[x]: Benefits allowed. One of these 3:
        "allowedUnsignedInt" : "<unsignedInt>",
        "allowedString" : "<string>",
        "allowedMoney" : { Money },
        // used[x]: Benefits used. One of these 2:
        "usedUnsignedInt" : "<unsignedInt>"
        "usedMoney" : { Money }
      }]
    }]
  }