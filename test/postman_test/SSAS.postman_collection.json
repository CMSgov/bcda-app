{
	"info": {
		"_postman_id": "514c3338-a3f4-4cfe-82cf-5a8335a8b414",
		"name": "SSAS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "admin post group, no group_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1678ec38-847b-4912-9d74-469a233d0200",
						"exec": [
							"pm.test(\"response is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"bad-json\": \"is-bad\"\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin post group, success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20ed753f-bd64-4270-9993-305d4efc1372",
						"exec": [
							"pm.test(\"response is created and returns json\", function () {",
							"    pm.response.to.have.status(201);",
							"    ",
							"    const schema = {",
							"        \"ID\": {\"type\": \"int\"},",
							"        \"CreatedAt\": {\"type\": \"string\"},",
							"        \"UpdatedAt\": {\"type\": \"string\"},",
							"        \"DeletedAt\": {\"type\": \"string\"},",
							"        \"group_id\": {\"type\": \"string\"},",
							"        \"data\": {\"type\": \"json\"}",
							"    };",
							"    var respJson = pm.response.json();",
							"    ",
							"    pm.test(\"schema is valid\", function() {",
							"        pm.expect(tv4.validate(respJson, schema)).to.be.true;",
							"    });",
							"    ",
							"    pm.environment.set(\"group-id\", respJson.ID);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"group_id\": \"fake-id\",\n    \"name\": \"fake-name\",\n    \"users\": [\n        \"00uiqolo7fEFSfif70h7\",\n        \"l0vckYyfyow4TZ0zOKek\",\n        \"HqtEi2khroEZkH4sdIzj\"\n    ],\n    \"scopes\": [\n        \"user-admin\",\n        \"system-admin\"\n    ],\n    \"resources\": [\n        {\n            \"id\": \"xxx\",\n            \"name\": \"BCDA API\",\n            \"scopes\": [\n                \"bcda-api\"\n            ]\n        },\n        {\n            \"id\": \"eft\",\n            \"name\": \"EFT CCLF\",\n            \"scopes\": [\n                \"eft-app:download\",\n                \"eft-data:read\"\n            ]\n        }\n    ],\n    \"system\": {\n        \"client_id\": \"4tuhiOIFIwriIOH3zn\",\n        \"software_id\": \"4NRB1-0XZABZI9E6-5SM3R\",\n        \"client_name\": \"ACO System A\"\n    }\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin put group, invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8dffcb16-25eb-44bc-8be3-fe19b23dc302",
						"exec": [
							"pm.test(\"response is 400 and record not found\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.have.body(\"Failed to update group. Error: record not found for id=9999\\n\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"fake-id\",\n    \"name\": \"fake-name\",\n    \"users\": [\n        \"00uiqolo7fEFSfif70h7\",\n        \"l0vckYyfyow4TZ0zOKek\",\n        \"HqtEi2khroEZkH4sdIzj\",\n        \"new-user\"\n    ],\n    \"scopes\": [\n        \"user-admin\",\n        \"system-admin\",\n        \"new-scope\"\n    ],\n    \"resources\": [\n        {\n            \"id\": \"xxx\",\n            \"name\": \"BCDA API\",\n            \"scopes\": [\n                \"bcda-api\"\n            ]\n        },\n        {\n            \"id\": \"eft\",\n            \"name\": \"EFT CCLF\",\n            \"scopes\": [\n                \"eft-app:download\",\n                \"eft-data:read\"\n            ]\n        }\n    ],\n    \"system\": {\n        \"client_id\": \"4tuhiOIFIwriIOH3zn\",\n        \"software_id\": \"4NRB1-0XZABZI9E6-5SM3R\",\n        \"client_name\": \"ACO System A\"\n    }\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group/9999",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin put group, success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8dffcb16-25eb-44bc-8be3-fe19b23dc302",
						"exec": [
							"pm.test(\"response is 200 and response has updated group\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.jsonBody({",
							"    \"group_id\": \"a-fake-id\",",
							"    \"data\": {",
							"        \"id\": \"a-fake-id\",",
							"        \"name\": \"a-fake-name\",",
							"        \"users\": [",
							"            \"00uiqolo7fEFSfif70h7\",",
							"            \"l0vckYyfyow4TZ0zOKek\",",
							"            \"HqtEi2khroEZkH4sdIzj\",",
							"            \"new-user\"",
							"        ],",
							"        \"scopes\": [",
							"            \"user-admin\",",
							"            \"system-admin\",",
							"            \"new-scope\"",
							"        ],",
							"        \"system\": {",
							"            \"ID\": 0,",
							"            \"CreatedAt\": \"0001-01-01T00:00:00Z\",",
							"            \"UpdatedAt\": \"0001-01-01T00:00:00Z\",",
							"            \"DeletedAt\": null,",
							"            \"group_id\": \"\",",
							"            \"client_id\": \"4tuhiOIFIwriIOH3zn\",",
							"            \"software_id\": \"4NRB1-0XZABZI9E6-5SM3R\",",
							"            \"client_name\": \"ACO System A\",",
							"            \"api_scope\": \"\",",
							"            \"encryption_keys\": null,",
							"            \"secrets\": null",
							"        },",
							"        \"resources\": [",
							"            {",
							"                \"id\": \"xxx\",",
							"                \"name\": \"BCDA API\",",
							"                \"scopes\": [",
							"                    \"bcda-api\"",
							"                ]",
							"            },",
							"            {",
							"                \"id\": \"eft\",",
							"                \"name\": \"EFT CCLF\",",
							"                \"scopes\": [",
							"                    \"eft-app:download\",",
							"                    \"eft-data:read\"",
							"                ]",
							"            }",
							"        ]",
							"    }",
							"})",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"group_id\": \"fake-id\",\n    \"name\": \"fake-name\",\n    \"users\": [\n        \"00uiqolo7fEFSfif70h7\",\n        \"l0vckYyfyow4TZ0zOKek\",\n        \"HqtEi2khroEZkH4sdIzj\",\n        \"new-user\"\n    ],\n    \"scopes\": [\n        \"user-admin\",\n        \"system-admin\",\n        \"new-scope\"\n    ],\n    \"resources\": [\n        {\n            \"id\": \"xxx\",\n            \"name\": \"BCDA API\",\n            \"scopes\": [\n                \"bcda-api\"\n            ]\n        },\n        {\n            \"id\": \"eft\",\n            \"name\": \"EFT CCLF\",\n            \"scopes\": [\n                \"eft-app:download\",\n                \"eft-data:read\"\n            ]\n        }\n    ],\n    \"system\": {\n        \"client_id\": \"4tuhiOIFIwriIOH3zn\",\n        \"software_id\": \"4NRB1-0XZABZI9E6-5SM3R\",\n        \"client_name\": \"ACO System A\"\n    }\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group/{{group-id}}",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group",
						"{{group-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin get group, one group",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4740e30-67e2-4ec7-bfae-9d44f7aa84fc",
						"exec": [
							"pm.test(\"response is 200 and group found\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.jsonBody({\"name\":\"a-fake-name\"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin delete group, invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95ce3470-8202-4e9f-b4f6-4fe36a09cb0d",
						"exec": [
							"pm.test(\"response is 400 and record not found\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.have.body(\"Failed to delete group. Error: record not found\\n\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group/9999",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin delete group, success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95ce3470-8202-4e9f-b4f6-4fe36a09cb0d",
						"exec": [
							"pm.test(\"response is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group/{{group-id}}",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group",
						"{{group-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin get group, only fixture groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc625fc2-e25e-4fd2-a110-fc1528839ca7",
						"exec": [
							"pm.test(\"response is 200 and at least 2 fixture groups in response\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].group_id).to.eql(\"admin\");",
							"    pm.expect(jsonData[1].group_id).to.eql(\"0c527d2e-2e8a-4808-b11d-0fa06baf8254\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/group",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"group"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin delete token, success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95ce3470-8202-4e9f-b4f6-4fe36a09cb0d",
						"exec": [
							"pm.test(\"response is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/token/{{token_id}}",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"token",
						"{{token_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "public register",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-fake-token",
						"value": "T0000",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"group_id\":\"T0000\",\"client_id\":\"yet another evil twin\",\"client_name\":\"my sister's evil twin\",\"scope\":\"bcda-api\",\"jwks\":{\"keys\":[{\"e\":\"AAEAAQ\",\"n\":\"ok6rvXu95337IxsDXrKzlIqw_I_zPDG8JyEw2CTOtNMoDi1QzpXQVMGj2snNEmvNYaCTmFf51I-EDgeFLLexr40jzBXlg72quV4aw4yiNuxkigW0gMA92OmaT2jMRIdDZM8mVokoxyPfLub2YnXHFq0XuUUgkX_TlutVhgGbyPN0M12teYZtMYo2AUzIRggONhHvnibHP0CPWDjCwSfp3On1Recn4DPxbn3DuGslF2myalmCtkujNcrhHLhwYPP-yZFb8e0XSNTcQvXaQxAqmnWH6NXcOtaeWMQe43PNTAyNinhndgI8ozG3Hz-1NzHssDH_yk6UYFSszhDbWAzyqw\",\"kty\":\"RSA\"}]}}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/register",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "public info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/_info",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/_health",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"_health"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin _version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/_version",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"_version"
					]
				}
			},
			"response": []
		},
		{
			"name": "public info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/_info",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "public health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/_health",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"_health"
					]
				}
			},
			"response": []
		},
		{
			"name": "public _version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{scheme}}://{{host}}:{{admin-port}}/_version",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{admin-port}}",
					"path": [
						"_version"
					]
				}
			},
			"response": []
		},
		{
			"name": "public authn/challenge",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"login_id\":\"{{login_id}}\",\"factor_type\":\"{{factor_type}}\"}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/authn/challenge",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"authn",
						"challenge"
					]
				},
				"description": "Request that an MFA challenge passcode be sent, for example, via SMS"
			},
			"response": []
		},
		{
			"name": "public authn/verify",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"login_id\":\"{{login_id}}\",\"factor_type\":\"{{factor_type}}\",\"passcode\":\"{{passcode}}\"}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/authn/verify",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"authn",
						"verify"
					]
				},
				"description": "Verify an MFA passcode"
			},
			"response": []
		},
		{
			"name": "public authn",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"login_id\":\"{{login_id}}\",\"password\":\"{{password}}\"}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/authn",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"authn"
					]
				},
				"description": "Verify a username and password"
			},
			"response": []
		},
		{
			"name": "public register",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-group-id",
						"value": "{{group_id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"client_name\": \"My favorite name in all the world\",\n    \"scope\": \"bcda-api\",\n    \"jwks\": {\n        \"keys\": [\n            {\n                \"e\": \"AAEAAQ\",\n                \"n\": \"ok6rvXu95337IxsDXrKzlIqw_I_zPDG8JyEw2CTOtNMoDi1QzpXQVMGj2snNEmvNYaCTmFf51I-EDgeFLLexr40jzBXlg72quV4aw4yiNuxkigW0gMA92OmaT2jMRIdDZM8mVokoxyPfLub2YnXHFq0XuUUgkX_TlutVhgGbyPN0M12teYZtMYo2AUzIRggONhHvnibHP0CPWDjCwSfp3On1Recn4DPxbn3DuGslF2myalmCtkujNcrhHLhwYPP-yZFb8e0XSNTcQvXaQxAqmnWH6NXcOtaeWMQe43PNTAyNinhndgI8ozG3Hz-1NzHssDH_yk6UYFSszhDbWAzyqw\",\n                \"kty\": \"RSA\"\n            }\n        ]\n    }\n}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/register",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "public reset",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "x-group-id",
						"type": "text",
						"value": "T0001"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"client_id\":\"{{client_id}}\"}"
				},
				"url": {
					"raw": "{{scheme}}://{{host}}:{{public-port}}/reset",
					"protocol": "{{scheme}}",
					"host": [
						"{{host}}"
					],
					"port": "{{public-port}}",
					"path": [
						"reset"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{adminClientSecret}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{adminClientId}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3311938-8ba3-4d78-a5fc-82d922c68b48",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5bef9511-420b-4bd0-9f12-3a1ad54e2315",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}