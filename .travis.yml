# Credit to https://gist.github.com/y0ssar1an/df2dab474520c4086926f672c52db139
# for a starting point

# This is a weird way of telling Travis to use the fast container-based test
# runner instead of the slow VM-based runner.
sudo: false

language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any older versions be considered deprecated. Don't bother testing
# with them.
go:
  - 1.14.1

# Only clone the most recent commit.
git:
  depth: 1

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

services:
  - docker

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored by running
#   dep ensure -add github.com/golangci/golangci-lint/cmd/golangci-lint
# ...and adding this to your Gopkg.toml file.
#   required = ["github.com/golangci/golangci-lint/cmd/golangci-lint"]
before_script:
  # Disable services enabled by default to avoid port clashing
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  # Get Ansible Vault
  - sudo apt-get install python3
  - sudo pip install ansible


# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  # Put unencrypted secrets in the expected place
  - echo $VAULT_PW > .vault_password
  - bash /home/travis/gopath/src/github.com/CMSgov/bcda-app/ops/secrets --decrypt
  - mv -fv shared_files/encrypted/* shared_files/decrypted/
  - make docker-bootstrap
  - make test

env:
  global:
    secure: ptDRmA4aq4QRpjGkVSxMUZjzfCkd2fDhMVamJOratIVlKd0wLjGt28Cq/PRmfywBODB3jtWDf130vQNYKdy7yjEccI6zWCfxQXUdtXYWumVmPNM0ZPDZxLy3N+xOc1t447rF/CS61uknidm9PXX3AjlojWe/QZa1eSOJBunBtAzF2M9WF8td5qezKlhjJSg5wVfbYzzQPnk59HWeoGzLQCrx+aRm60iryyOLbBCdyYuRwZUHH3r3QXTZYgGjI/0kYguxkrtWgjD7gfNjjF/tNzHIEYuDYSLa443BDhd06TSXfJ25AcuLlZwREhrva4bmG5B/rU3ggvTl0287BHA6U9RmzCz9KzjS8XvlZJhGPYz2fJW3l1Z/HFMtE3QBeDX3Pd5BL6kS81ZzQ7vi+mQczBrFJ/qRFHCMnfUKOlPIPeHDpLUhaJHFbYj6P+RdrtxdB7c7bVb4LV5rxObSmHk5eq2qpah3MEuJBvakBCU2/3+lzOqwwf2JXVV6KngiozBrE+Aye4qqZnnZowAQo9qIxj7Vg6VpwUmB8hHa3yVm8Jx87GjbjjbeeDotvGr/1cLioY7ad/QDfaNsVX9PPyzkfhySQA4SsR5oxRf9FnMJBeC2TESPF+RRG7KlXEc1NlupjpFZOp9SJFbVoZ0nh3JG5KvyG6P8M3x6IkyfPAx8PTM=
