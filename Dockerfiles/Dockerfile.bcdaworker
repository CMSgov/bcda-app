FROM golang:1.25.1-alpine3.22 AS builder

ARG GO_FLAGS
ARG RELEASE_VERSION=main

WORKDIR /go/src/github.com/CMSgov/bcda-app

# Download all dependencies
# By pulling this step out, we can leverage Docker caching
# since our tooling/dependencies do not frequently change.
COPY go.mod go.sum tools.go ./
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod download
RUN --mount=type=cache,target=/go/pkg/mod \
    cat tools.go | awk '/[\/\/] bcda/{flag=1; next} /[\/\/] end/{flag=0} flag' | awk -F '"' '{print $2}' | xargs -tI % go get %

COPY . .
WORKDIR /go/src/github.com/CMSgov/bcda-app/bcdaworker
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    go install -ldflags "-X github.com/CMSgov/bcda-app/bcda/constants.Version=${RELEASE_VERSION}" "$GO_FLAGS"

# ------------------------------------------------------------------------
FROM golang:1.25.1-alpine3.22

RUN apk update upgrade && \
    apk add --no-cache aws-cli

RUN addgroup -S -g 1010 bcda && adduser -S -G bcda -u 1010 bcda

# install dev packages if the environment argument was set to development
ARG ENVIRONMENT
RUN [ "$ENVIRONMENT" != "development" ] || apk add --no-cache bash && \
    go install github.com/go-delve/delve/cmd/dlv@latest

WORKDIR /go/src/github.com/CMSgov/bcda-app/bcdaworker

COPY --from=builder /go/src/github.com/CMSgov/bcda-app/shared_files/ /go/src/github.com/CMSgov/bcda-app/shared_files/
COPY --from=builder /go/src/github.com/CMSgov/bcda-app/bcdaworker/ /go/src/github.com/CMSgov/bcda-app/bcdaworker/
COPY --from=builder /go/bin/ /go/bin/
COPY --from=builder /go/src/github.com/CMSgov/bcda-app/entrypoint.sh .

# configure directories
RUN mkdir -p /var/fhir /etc/sv/worker/env && chown -R bcda:bcda \
    /go/src/github.com/CMSgov/bcda-app \
    /var/fhir \
    /etc/sv/worker/env \
    /var/log

USER bcda

ENV APP_NAME="worker"

ENTRYPOINT ["./entrypoint.sh"]
CMD ["bcdaworker"]
