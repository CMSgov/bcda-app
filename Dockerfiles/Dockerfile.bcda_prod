FROM golang:1.24.4-alpine3.22 AS builder

ARG GO_FLAGS
# install dev packages if the environment argument was set to development
ARG ENVIRONMENT
RUN [ "$ENVIRONMENT" != "development" ] || apk update upgrade && \
    apk add git \
        bash \
        entr \
        openssl && \
    go install github.com/go-delve/delve/cmd/dlv@latest
    
WORKDIR /go/src/github.com/CMSgov/bcda-app

# Download all dependencies
# By pulling this step out, we can leverage Docker caching
# since our tooling/dependencies do not frequently change.
COPY go.mod go.sum tools.go ./
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod download
RUN --mount=type=cache,target=/go/pkg/mod \ 
    cat tools.go | awk '/[\/\/] bcda/{flag=1; next} /[\/\/] end/{flag=0} flag' | awk -F '"' '{print $2}' | xargs -tI % go get % 

COPY . .
WORKDIR /go/src/github.com/CMSgov/bcda-app/bcda
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    go install "$GO_FLAGS"

# ------------------------------------------------------------------------
FROM golang:1.24.4-alpine3.22

WORKDIR /go/src/github.com/CMSgov/bcda-app/bcda

COPY --from=builder /go/src/github.com/CMSgov/bcda-app/shared_files/ /go/src/github.com/CMSgov/bcda-app/shared_files/
COPY --from=builder /go/src/github.com/CMSgov/bcda-app/bcda/ /go/src/github.com/CMSgov/bcda-app/bcda/
COPY --from=builder /go/bin/ /go/bin/

ENTRYPOINT ["bcda"]
CMD ["start-api"]
