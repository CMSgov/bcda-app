# syntax = docker/dockerfile:1-experimental
FROM golang:1.21.12-alpine3.20 AS builder

RUN apk update upgrade

WORKDIR /go/src/github.com/CMSgov/bcda-app

# Download all dependencies
# By pulling this step out, we can leverage Docker caching
# since our tooling/dependencies do not frequently change.
COPY go.mod go.sum tools.go ./
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod download
RUN --mount=type=cache,target=/go/pkg/mod \ 
    cat tools.go | awk '/[\/\/] bcda/{flag=1; next} /[\/\/] end/{flag=0} flag' | awk -F '"' '{print $2}' | xargs -tI % go get % 

COPY . .
WORKDIR /go/src/github.com/CMSgov/bcda-app/bcda
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    go install -v 

# syntax = docker/dockerfile:1-experimental
FROM golang:1.21.12-alpine3.20
ARG ENVIRONMENT
# only add dev packages if the environment argument was set to development
RUN [ "$ENVIRONMENT" != "development" ] || apk add git openssl entr bash
WORKDIR /go/src/github.com/CMSgov/bcda-app/bcda
COPY --from=builder /go/src/github.com/CMSgov/bcda-app/bcda/ /go/src/github.com/CMSgov/bcda-app/bcda/
COPY --from=builder /go/bin/ /go/bin/
ENTRYPOINT ["bcda"]
CMD ["start-api"]
