// Copyright 2019 The Samply Development Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// AddressUse is documented here http://hl7.org/fhir/ValueSet/address-use
type AddressUse int

const (
	AddressUseHome AddressUse = iota
	AddressUseWork
	AddressUseTemp
	AddressUseOld
	AddressUseBilling
)

func (code AddressUse) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *AddressUse) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "home":
		*code = AddressUseHome
	case "work":
		*code = AddressUseWork
	case "temp":
		*code = AddressUseTemp
	case "old":
		*code = AddressUseOld
	case "billing":
		*code = AddressUseBilling
	default:
		return fmt.Errorf("unknown AddressUse code `%s`", s)
	}
	return nil
}
func (code AddressUse) String() string {
	return code.Code()
}
func (code AddressUse) Code() string {
	switch code {
	case AddressUseHome:
		return "home"
	case AddressUseWork:
		return "work"
	case AddressUseTemp:
		return "temp"
	case AddressUseOld:
		return "old"
	case AddressUseBilling:
		return "billing"
	}
	return "<unknown>"
}
func (code AddressUse) Display() string {
	switch code {
	case AddressUseHome:
		return "Home"
	case AddressUseWork:
		return "Work"
	case AddressUseTemp:
		return "Temporary"
	case AddressUseOld:
		return "Old / Incorrect"
	case AddressUseBilling:
		return "Billing"
	}
	return "<unknown>"
}
func (code AddressUse) Definition() string {
	switch code {
	case AddressUseHome:
		return "A communication address at a home."
	case AddressUseWork:
		return "An office address. First choice for business related contacts during business hours."
	case AddressUseTemp:
		return "A temporary address. The period can provide more detailed information."
	case AddressUseOld:
		return "This address is no longer in use (or was never correct but retained for records)."
	case AddressUseBilling:
		return "An address to be used to send bills, invoices, receipts etc."
	}
	return "<unknown>"
}
