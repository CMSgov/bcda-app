// Copyright 2019 The Samply Development Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// RequestPriority is documented here http://hl7.org/fhir/ValueSet/request-priority
type RequestPriority int

const (
	RequestPriorityRoutine RequestPriority = iota
	RequestPriorityUrgent
	RequestPriorityAsap
	RequestPriorityStat
)

func (code RequestPriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *RequestPriority) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "routine":
		*code = RequestPriorityRoutine
	case "urgent":
		*code = RequestPriorityUrgent
	case "asap":
		*code = RequestPriorityAsap
	case "stat":
		*code = RequestPriorityStat
	default:
		return fmt.Errorf("unknown RequestPriority code `%s`", s)
	}
	return nil
}
func (code RequestPriority) String() string {
	return code.Code()
}
func (code RequestPriority) Code() string {
	switch code {
	case RequestPriorityRoutine:
		return "routine"
	case RequestPriorityUrgent:
		return "urgent"
	case RequestPriorityAsap:
		return "asap"
	case RequestPriorityStat:
		return "stat"
	}
	return "<unknown>"
}
func (code RequestPriority) Display() string {
	switch code {
	case RequestPriorityRoutine:
		return "Routine"
	case RequestPriorityUrgent:
		return "Urgent"
	case RequestPriorityAsap:
		return "ASAP"
	case RequestPriorityStat:
		return "STAT"
	}
	return "<unknown>"
}
func (code RequestPriority) Definition() string {
	switch code {
	case RequestPriorityRoutine:
		return "The request has normal priority."
	case RequestPriorityUrgent:
		return "The request should be actioned promptly - higher priority than routine."
	case RequestPriorityAsap:
		return "The request should be actioned as soon as possible - higher priority than urgent."
	case RequestPriorityStat:
		return "The request should be actioned immediately - highest possible priority.  E.g. an emergency."
	}
	return "<unknown>"
}
